# Thanks to Calego / ElfFriend (https://github.com/ElfFriend-DnD/) for the initial reference for this GH Action.
name: Module Tag / Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    environment: default
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2


      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"


      - name: Install Dependencies
        run: |
          npm install -g yarn
          yarn install


      - name: Get Release Version From Tag
        shell: python
        run: |
          import os, re
          
          tag = re.sub("^refs/tags/", "", os.environ["GITHUB_REF"])
          assert tag != os.environ["GITHUB_REF"]
          
          with open(os.environ["GITHUB_ENV"], "a") as github_env:
            github_env.write(f"RELEASE_VERSION={tag}\n")


      - name: Prepare Module Manifest
        shell: python
        run: |
          import os, json
          
          efmt = lambda s: s.format(**os.environ)
          repository_url = efmt("{GITHUB_SERVER_URL}/{GITHUB_REPOSITORY}")
          release_path   = efmt("releases/download/{RELEASE_VERSION}")
          release_url    = f"{repository_url}/{release_path}"
          
          with open("module/module.json", "r+") as fh:
            # Load the data
            data = json.load(fh)

            # Update data values
            data["version"]  = os.environ["RELEASE_VERSION"]
            data["download"] = f"{release_url}/module.zip"

            # Truncate the file and write the modified data
            fh.seek(0)
            fh.truncate(0)
            json.dump(data, fh, indent=4)


      - name: Build Release
        env:
          SHOULD_DEPLOY_SOURCEMAPS: "true"
          SHOULD_MINIFY: "true"
          SHOULD_OPTIMIZE: "true"
        run: |
          yarn run build-release


      - name: Zip Release
        working-directory: ./build
        run: |
          zip -r ./module.zip ./*


      # Generate changelog for release body
      - name: Generate Changelog
        uses: scottbrenner/generate-changelog-action@f17b985298496cf8df35aa1104091c51e7bfea95
        env:
          REPO: ${{ github.repository }}


      # Create a release for this specific version
      - name: Create Release
        uses: ncipollo/release-action@238505795d6d58d49b78980f271f70dfcd8efb35
        with:
          allowUpdates: true
          name: ${{ env.RELEASE_VERSION }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './build/module.json,./build/module.zip'
          tag: ${{ env.RELEASE_VERSION }}


      # Publish the release to FoundryVTT's package repository.
      - name: FoundryVTT AutoPublish
        uses: Varriount/fvtt-autopublish@main
        with:
          username: ${{ secrets.FOUNDRY_ADMIN_USERNAME }}
          password: ${{ secrets.FOUNDRY_ADMIN_PASSWORD }}
          module-id: "autorotate"
          manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ env.RELEASE_VERSION }}/module.json
          manifest-file: ./build/module.json
